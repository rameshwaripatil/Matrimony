!function(t){function e(s){if(n[s])return n[s].exports;var a=n[s]={exports:{},id:s,loaded:!1};return t[s].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var n={};e.m=t,e.c=n,e.p="",e(0)}({0:function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _fgLoadcss = __webpack_require__(45);\n\nvar _tpEvents = __webpack_require__(6);\n\nvar _tpEvents2 = _interopRequireDefault(_tpEvents);\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n\nvar envSettings = __webpack_require__(1);\nenvSettings = envSettings.constants;\n\n// import Demo from './demo';\n\n(function () {\n    var queue = { init: false },\n        initCallCount = 0,\n        exec = function exec() {\n        for (var i = 0; i < queue.addPL.length; i++) {\n            (function () {\n                var acode = queue.addPL[i],\n                    index = i;\n                setTimeout(function () {\n                    TPWidget.addPreLoginPoints(acode);\n                }, index * 500);\n            })();\n        }\n        queue.addPL = [];\n    };\n\n    var bodyEle = document.body;\n    _tpEvents2.default.addEvent(bodyEle, 'tpwidget-loaded', function () {\n        if (queue.init != false) {\n            if (initCallCount == 0) {\n                ++initCallCount;\n                queue.init ? TPWidget.bootstrap(queue.init) : TPWidget.bootstrap();\n                queue.init = false;\n            } else {\n                console.warn('Widget has been initialized and should not be re-initialize. Refer widget integration document for widget flow cycle');\n            }\n        }\n    });\n    _tpEvents2.default.addEvent(bodyEle, 'tpFetchComplete', function () {\n        if (queue.addPL && queue.addPL.length) {\n            exec();\n        }\n    });\n    function onloadCSS(ss, callback) {\n        var called;\n        function newcb() {\n            if (!called && callback) {\n                called = true;\n                callback.call(ss);\n            }\n        }\n        if (ss.addEventListener) {\n            ss.addEventListener(\"load\", newcb);\n        }\n        if (ss.attachEvent) {\n            ss.attachEvent(\"onload\", newcb);\n        }\n\n        if (\"isApplicationInstalled\" in navigator && \"onloadcssdefined\" in ss) {\n            ss.onloadcssdefined(newcb);\n        }\n    }\n    _tpEvents2.default.asyncRequest('GET', envSettings.apiEndPoint + \"/config/nocache/wversion\", function (res) {\n        if (res.status >= 200 && res.status < 400) {\n            var data = res.responseText && typeof res.responseText == 'string' ? JSON.parse(res.responseText) : res.responseText;\n            window.__tpvar = data.version;\n            window.__tpPointsVer = data.pversion;\n            window.__tpTemp = {\n                rc: data.maxRetryCount,\n                ri: data.retryInt\n            };\n        }\n        var stylesheet = (0, _fgLoadcss.loadCSS)(envSettings.staticPath + '/static/dist/css/app.css?v=' + window.__tpvar);\n        onloadCSS(stylesheet, function () {\n            var s = document.createElement('script');\n            s.src = envSettings.staticPath + '/static/dist/js/tpwidget.js?v=' + window.__tpvar;\n            s.type = \"text/javascript\";\n            s.async = false;\n            document.getElementsByTagName('head')[0].appendChild(s);\n        });\n    });\n    window.TPWidget = {\n        init: function init(options) {\n            if (window.__tpWidgetLoaded) {\n                options ? TPWidget.bootstrap(options) : TPWidget.bootstrap();\n            } else {\n                queue.init = options;\n            }\n        },\n        PostLoginActions: function PostLoginActions(userDetails) {\n            if (window.__tpFetchComplete) {\n                TPWidget.signinCallback(userDetails);\n            } else {\n                console.warn('Pass user information while initializing the widget, Refer widget integration document');\n            }\n        },\n        addPreLoginActivity: function addPreLoginActivity(activityCode) {\n            if (window.__tpFetchComplete) {\n                TPWidget.addPreLoginPoints(activityCode);\n            } else {\n                queue.addPL = queue.addPL || [];\n                queue.addPL.push(activityCode);\n            }\n        },\n        logoutAction: function logoutAction() {\n            TPWidget.signinCallback();\n        }\n    };\n})();\n\n_tpEvents2.default.triggerEvent(document.body, 'tpwidget-ready');\nwindow.__tpWidgetReady = true;\n\n// Demo.addPL()\n// Demo.init()\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/app/scripts/main.js\n// module id = 0\n// module chunks = 1\n//# sourceURL=webpack:///./static/app/scripts/main.js?")},1:function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar constants = { "staticPath": "//image.timespoints.iimg.in/tpwidgets", "apiEndPoint": "//tpapi.timespoints.com" };exports.constants = constants;\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/app/scripts/settings.js\n// module id = 1\n// module chunks = 0 1\n//# sourceURL=webpack:///./static/app/scripts/settings.js?')},6:function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError("Cannot call a class as a function");\n    }\n}\n\nvar TPEvents = function () {\n    function TPEvents() {\n        _classCallCheck(this, TPEvents);\n    }\n\n    _createClass(TPEvents, [{\n        key: "addEvent",\n        value: function addEvent(el, ev, fn) {\n            function listenHandler(e) {\n                var ret = fn.apply(this, arguments);\n                if (ret === false) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n                return ret;\n            }\n\n            function attachHandler() {\n                var ret = fn.call(el, window.event);\n                if (ret === false) {\n                    window.event.returnValue = false;\n                    window.event.cancelBubble = true;\n                }\n                return ret;\n            }\n\n            if (document.addEventListener) {\n                el.addEventListener(ev, listenHandler, false);\n                return { el: el, handler: listenHandler, event: ev };\n            } else {\n                el.attachEvent("on" + ev, attachHandler);\n                return { el: el, handler: attachHandler, event: ev };\n            }\n        }\n    }, {\n        key: "triggerEvent",\n        value: function triggerEvent(ele, evtName, evtData) {\n            evtData = evtData || [];\n            evtData = evtData.length > 0 ? evtData : [evtData];\n            var customEvent,\n                customDataObject = {\n                customData: evtData\n            };\n            if (window.CustomEvent) {\n                customEvent = new window.CustomEvent(evtName, {\n                    bubbles: true,\n                    cancelable: true,\n                    detail: customDataObject\n                });\n            } else {\n                customEvent = document.createEvent("CustomEvent");\n                customEvent.initCustomEvent(evtName, true, true, customDataObject);\n            }\n            ele.dispatchEvent(customEvent);\n        }\n    }, {\n        key: "asyncRequest",\n        value: function asyncRequest(methodType, uri, callback, postData, contentType, requestHeaders) {\n            function handleReadyState(o, callback) {\n                var poll = window.setInterval(function () {\n                    if (o && o.readyState == 4) {\n                        window.clearInterval(poll);\n                        if (callback) {\n                            callback(o);\n                        }\n                    }\n                }, 50);\n            }\n            var http;\n            try {\n                http = new XMLHttpRequest();\n            } catch (e) {\n                var msxml = [\'MSXML2.XMLHTTP.3.0\', \'MSXML2.XMLHTTP\', \'Microsoft.XMLHTTP\'];\n                for (var i = 0, len = msxml.length; i < len; ++i) {\n                    try {\n                        http = new ActiveXObject(msxml[i]);\n                        break;\n                    } catch (e) {}\n                }\n            }\n\n            http.open(methodType, uri, true);\n\n            if (contentType) {\n                http.setRequestHeader("Content-Type", contentType);\n            }\n\n            if (requestHeaders) {\n                var headerData = Object.keys(requestHeaders);\n                for (var i = 0; i < headerData.length; i++) {\n                    http.setRequestHeader(headerData[i], requestHeaders[headerData[i]]);\n                }\n            }\n\n            handleReadyState(http, callback);\n            http.send(postData || null);\n            return http;\n        }\n    }]);\n\n    return TPEvents;\n}();\n\nexports.default = new TPEvents();\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/app/scripts/tp-events.js\n// module id = 6\n// module chunks = 0 1\n//# sourceURL=webpack:///./static/app/scripts/tp-events.js?')},45:function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */\n(function(w){\n\t"use strict";\n\t/* exported loadCSS */\n\tvar loadCSS = function( href, before, media ){\n\t\t// Arguments explained:\n\t\t// `href` [REQUIRED] is the URL for your CSS file.\n\t\t// `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before\n\t\t\t// By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.\n\t\t// `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be \'all\'\n\t\tvar doc = w.document;\n\t\tvar ss = doc.createElement( "link" );\n\t\tvar ref;\n\t\tif( before ){\n\t\t\tref = before;\n\t\t}\n\t\telse {\n\t\t\tvar refs = ( doc.body || doc.getElementsByTagName( "head" )[ 0 ] ).childNodes;\n\t\t\tref = refs[ refs.length - 1];\n\t\t}\n\n\t\tvar sheets = doc.styleSheets;\n\t\tss.rel = "stylesheet";\n\t\tss.href = href;\n\t\t// temporarily set media to something inapplicable to ensure it\'ll fetch without blocking render\n\t\tss.media = "only x";\n\n\t\t// wait until body is defined before injecting link. This ensures a non-blocking load in IE11.\n\t\tfunction ready( cb ){\n\t\t\tif( doc.body ){\n\t\t\t\treturn cb();\n\t\t\t}\n\t\t\tsetTimeout(function(){\n\t\t\t\tready( cb );\n\t\t\t});\n\t\t}\n\t\t// Inject link\n\t\t\t// Note: the ternary preserves the existing behavior of "before" argument, but we could choose to change the argument to "after" in a later release and standardize on ref.nextSibling for all refs\n\t\t\t// Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t\tready( function(){\n\t\t\tref.parentNode.insertBefore( ss, ( before ? ref : ref.nextSibling ) );\n\t\t});\n\t\t// A method (exposed on return object for external use) that mimics onload by polling document.styleSheets until it includes the new sheet.\n\t\tvar onloadcssdefined = function( cb ){\n\t\t\tvar resolvedHref = ss.href;\n\t\t\tvar i = sheets.length;\n\t\t\twhile( i-- ){\n\t\t\t\tif( sheets[ i ].href === resolvedHref ){\n\t\t\t\t\treturn cb();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(function() {\n\t\t\t\tonloadcssdefined( cb );\n\t\t\t});\n\t\t};\n\n\t\tfunction loadCB(){\n\t\t\tif( ss.addEventListener ){\n\t\t\t\tss.removeEventListener( "load", loadCB );\n\t\t\t}\n\t\t\tss.media = media || "all";\n\t\t}\n\n\t\t// once loaded, set link\'s media back to `all` so that the stylesheet applies once it loads\n\t\tif( ss.addEventListener ){\n\t\t\tss.addEventListener( "load", loadCB);\n\t\t}\n\t\tss.onloadcssdefined = onloadcssdefined;\n\t\tonloadcssdefined( loadCB );\n\t\treturn ss;\n\t};\n\t// commonjs\n\tif( true ){\n\t\texports.loadCSS = loadCSS;\n\t}\n\telse {\n\t\tw.loadCSS = loadCSS;\n\t}\n}( typeof global !== "undefined" ? global : this ));\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fg-loadcss/src/loadCSS.js\n// module id = 45\n// module chunks = 1\n//# sourceURL=webpack:///./~/fg-loadcss/src/loadCSS.js?')}});